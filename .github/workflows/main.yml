name: Django-app workflow

on: [push]

jobs:
  requirements:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: | 
        pip install -r requirements.txt 

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: requirements
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }} 
            password: ${{ secrets.DOCKER_PASSWORD }} 
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: ./
            file: backend/Dockerfile
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:latest
            
  build_and_push_to_docker_hub_frontend:
      needs: requirements
      name: Push Docker image to Docker Hub Frontend
      runs-on: ubuntu-latest
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }} 
            password: ${{ secrets.DOCKER_PASSWORD }} 
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            context: ./frontend
            tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [ 'build_and_push_to_docker_hub', 'build_and_push_to_docker_hub_frontend']
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd foodgram-project-react
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo IP=${{ secrets.IP }} >> .env
          echo API_URL=${{ secrets.API_URL }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          cd infra
          sudo docker-compose stop
          sudo docker-compose rm foodgram
          sudo docker-compose rm foodgram_frontend
          sudo docker-compose up --detach
          